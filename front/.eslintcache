[{"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\index.js":"1","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\reportWebVitals.js":"2","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\App.js":"3","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\home.js":"4","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Service.js":"5","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Contact.js":"6","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Home.js":"7","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\MultiStepForm.js":"8","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\index.js":"9","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\App.js":"10","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\reportWebVitals.js":"11","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Service.js":"12","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Home.js":"13","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Contact.js":"14","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\MultiStepForm.js":"15","E:\\MyProjects\\mastis\\front\\src\\index.js":"16","E:\\MyProjects\\mastis\\front\\src\\reportWebVitals.js":"17","E:\\MyProjects\\mastis\\front\\src\\App.js":"18","E:\\MyProjects\\mastis\\front\\src\\components\\Contact.js":"19","E:\\MyProjects\\mastis\\front\\src\\components\\Service.js":"20","E:\\MyProjects\\mastis\\front\\src\\components\\Home.js":"21","E:\\MyProjects\\mastis\\front\\src\\components\\MultiStepForm.js":"22","E:\\MyProjects\\mastis\\front\\src\\components\\ContactUsForm.js":"23","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\OtherQueries.js":"24","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\FormField.js":"25","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\SelfEmployed.js":"26","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\CompanyMatters.js":"27","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\NewCompanyEstablish.js":"28","E:\\MyProjects\\mastis\\front\\src\\components\\MetaCreator.js":"29","E:\\MyProjects\\mastis\\front\\src\\components\\FloatingButtonContent.js":"30"},{"size":288,"mtime":1607456226453,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":4971,"mtime":1608059037651,"results":"34","hashOfConfig":"32"},{"size":1546,"mtime":1607970244802,"results":"35","hashOfConfig":"32"},{"size":1979,"mtime":1608054158615,"results":"36","hashOfConfig":"32"},{"size":3441,"mtime":1608053246515,"results":"37","hashOfConfig":"32"},{"size":980,"mtime":1608054268378,"results":"38","hashOfConfig":"32"},{"size":3055,"mtime":1608059066004,"results":"39","hashOfConfig":"32"},{"size":288,"mtime":1607456226453,"results":"40","hashOfConfig":"41"},{"size":4971,"mtime":1608059037651,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":1979,"mtime":1608054158615,"results":"44","hashOfConfig":"41"},{"size":980,"mtime":1608054268378,"results":"45","hashOfConfig":"41"},{"size":3441,"mtime":1608053246515,"results":"46","hashOfConfig":"41"},{"size":3055,"mtime":1608059066004,"results":"47","hashOfConfig":"41"},{"size":430,"mtime":1612538284206,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":6945,"mtime":1612534281187,"results":"51","hashOfConfig":"49"},{"size":2587,"mtime":1612209306340,"results":"52","hashOfConfig":"49"},{"size":1028,"mtime":1612210219790,"results":"53","hashOfConfig":"49"},{"size":1580,"mtime":1612208773903,"results":"54","hashOfConfig":"49"},{"size":4253,"mtime":1610996444797,"results":"55","hashOfConfig":"49"},{"size":5971,"mtime":1612534955580,"results":"56","hashOfConfig":"49"},{"size":3730,"mtime":1612359896444,"results":"57","hashOfConfig":"49"},{"size":2542,"mtime":1611920090903,"results":"58","hashOfConfig":"49"},{"size":5780,"mtime":1612360405213,"results":"59","hashOfConfig":"49"},{"size":5147,"mtime":1612363835189,"results":"60","hashOfConfig":"49"},{"size":21590,"mtime":1612364237008,"results":"61","hashOfConfig":"49"},{"size":324,"mtime":1612188384350,"results":"62","hashOfConfig":"49"},{"size":480,"mtime":1612534506079,"results":"63","hashOfConfig":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"3ppazc",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lw1y8p",{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e6m8gh",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\index.js",[],["130","131"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\reportWebVitals.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\App.js",["132","133","134","135"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\home.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Service.js",["136"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Contact.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Home.js",["137","138"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\MultiStepForm.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\index.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\App.js",["139","140","141","142"],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\reportWebVitals.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Service.js",["143"],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Home.js",["144","145"],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Contact.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\MultiStepForm.js",[],"E:\\MyProjects\\mastis\\front\\src\\index.js",[],"E:\\MyProjects\\mastis\\front\\src\\reportWebVitals.js",[],["146","147"],"E:\\MyProjects\\mastis\\front\\src\\App.js",["148","149","150","151","152","153","154","155","156","157"],"E:\\MyProjects\\mastis\\front\\src\\components\\Contact.js",["158"],"import React from 'react'\r\nimport MetaCreator from '../components/MetaCreator'\r\nimport { Fab } from '@material-ui/core';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n\r\nconst Contact = (props) => {\r\n\r\n        return (\r\n            <div className=\"block\">\r\n                <MetaCreator title={props.title + \" - Contact us\" } description=\"Accounting, bookkepping services in London, UK.\"/>\r\n                <div className=\"columns \" style={{\"width\": \"100%\"}}>\r\n                    <div className=\"column px-6\">\r\n                        <a href=\"mailto:info@mastis.co.uk\">\r\n                            <div style={{\"opacity\":\"0.9\",\"text-align\":\"center\",\"backgroundColor\":\"silver\",\"borderRadius\":\"10px\",\"padding\":\"10px\"}}>\r\n                                <Fab>\r\n                                    <EmailIcon color=\"primary\" fontSize=\"large\"/>\r\n                                </Fab>\r\n                                <p><strong style={{\"color\":\"black\"}}>info@mastis.co.uk</strong></p>\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"column px-6\">\r\n                        <a href=\"tel:+447450225137\">\r\n                            <div style={{\"opacity\":\"0.9\",\"text-align\":\"center\",\"backgroundColor\":\"silver\",\"borderRadius\":\"10px\",\"padding\":\"10px\"}}>\r\n                                    <Fab>\r\n                                        <CallIcon color=\"primary\" fontSize=\"large\"/>\r\n                                    </Fab>\r\n                                    <p><strong style={{\"color\":\"black\"}}>07498 226576</strong></p>\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"column px-6\">\r\n                        <a type=\"button\" onClick={()=>{props.toggleVisibility()}}>\r\n                            <div  style={{\"opacity\":\"0.9\",\"text-align\":\"center\",\"backgroundColor\":\"silver\",\"borderRadius\":\"10px\",\"padding\":\"10px\"}}>\r\n                                <Fab>\r\n                                    <ChatIcon color=\"primary\" fontSize=\"large\" onClick={()=>{props.toggleVisibility()}}/>\r\n                                </Fab>\r\n                                <p><strong style={{\"color\":\"black\"}}>Contact us form</strong></p>               \r\n                            </div>\r\n                        </a>  \r\n                    </div>\r\n                </div>\r\n            </div> \r\n          ) \r\n}\r\n\r\nexport default Contact","E:\\MyProjects\\mastis\\front\\src\\components\\Service.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Home.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\MultiStepForm.js",["159","160","161"],"E:\\MyProjects\\mastis\\front\\src\\components\\ContactUsForm.js",["162","163"],"import React, { useState, useRef } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport OtherQueries from './Forms/OtherQueries'\r\nimport SelfEmployed from './Forms/SelfEmployed'\r\nimport CompanyMAtters from './Forms/CompanyMatters'\r\nimport NewCompanyEstablish from './Forms/NewCompanyEstablish'\r\n\r\n\r\n\r\n\r\nconst ContactUsForm = (props) => {\r\n    const [type, setType] = useState(null)\r\n    const [loading, setLoading]= useState(false)\r\n    const [serverResponse, setServerResponse] = useState(\"\")\r\n    const [uploadedFile, setUploadedFile] = useState([])\r\n\r\n    let history = useHistory()\r\n    console.log(history)\r\n    \r\n    const handleSelectFieldChange = (event) => {\r\n        setType(event.target.value)\r\n        setUploadedFile([])\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        setLoading(\"loading\")\r\n        setType(null)\r\n        let formData = new FormData()\r\n        formData.append(\"values\", JSON.stringify(values) )\r\n        if(uploadedFile !== null){\r\n            for(let i = 0; i< uploadedFile.length ; i ++){\r\n                formData.append('file', uploadedFile[i])\r\n            }  \r\n        } \r\n        axios.post('http://localhost:3001/swx', formData).then((response) => {\r\n            if(response.data.successful){\r\n                setServerResponse(response.data.successful)\r\n                setLoading(\"successful\")\r\n\r\n            }else if(response.data.error){\r\n                setServerResponse(response.data.error)\r\n                setLoading(\"error\")\r\n            }else{\r\n                setServerResponse(\"error\")\r\n                setLoading(\"error\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const krc ={\r\n            \"padding\": \"10px\",\r\n            \"width\" : \"375px\"\r\n            \r\n    }\r\n\r\n\r\n    const topRef = React.useRef(null);\r\n    \r\n    const scrollToTop = () => {\r\n        topRef.current.scrollIntoView(\r\n            {\r\n                behavior: \"smooth\",\r\n                 block: \"end\", \r\n                 inline: \"start\"\r\n            }\r\n        ); \r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n                <div className=\"container px-5\">\r\n                  <p className=\"title\">Contact us</p>\r\n                </div>\r\n                  <div className=\"modal-content py-4 px-6\" style={krc}> \r\n                    <div className=\"columns is-vcentered is-centered py-3\" style={{\"paddingTop\":\"10px\" , \"width\":\"300px\"}}>\r\n                      <div className=\"column is-centered\" >\r\n                        { loading === \"loading\" ? \r\n                                <div className=\"loader-wrapper\" style={{\"height\":\"100%\", \"width\":\"300px\", \"display\":\"flex\",\"justifyContent\":\"center\",\"alignItems\":\"center\"}}>\r\n                                    <div className=\"loader is-loading\" style={{\"height\":\"100px\", \"width\":\"100px\"}}></div>\r\n                                </div> \r\n                                :\r\n                                loading === \"successful\" ?\r\n                                                        <div className=\"notification is-success\" style={{\"width\":\"250px\"}}>\r\n                                                            <button className=\"delete\" onClick={()=>{setLoading(false)}}></button>\r\n                                                            <p className=\"subtitle\">{serverResponse}</p>\r\n                                                        </div>\r\n                                :\r\n                                loading === \"error\" ?\r\n                                                    <div className=\"notification is-danger\" style={{\"width\":\"250px\"}}>\r\n                                                        <button className=\"delete\" onClick={()=>{setLoading(false)}}></button>\r\n                                                        <p className=\"subtitle\">{serverResponse}</p>\r\n                                                    </div>\r\n                                :\r\n                                <div className=\"select\" style={{\"paddingBottom\": \"5px\"}} ref={topRef} >\r\n                                    <select style={{\"width\":\"260px\"}} onChange={handleSelectFieldChange}>\r\n                                        <option disabled selected>Reason for contacting us</option>\r\n                                        <option value=\"General queries\">General queries</option>\r\n                                        <option value=\"Set up a private limited company\">Set up a private limited company</option>\r\n                                        <option value=\"Company matters\">Company matters</option>\r\n                                        <option value=\"Self-employment queries\">Self-employment queries </option>\r\n                                    </select>\r\n                                </div>\r\n                        }\r\n                        {type === \"General queries\" ? <OtherQueries type={type} handleSubmit={handleSubmit} uploadedFile={uploadedFile} setUploadedFile={setUploadedFile}/> : null}\r\n                        {type === \"Self-employment queries\" ? <SelfEmployed type={type} handleSubmit={handleSubmit} uploadedFile={uploadedFile} setUploadedFile={setUploadedFile}/> : null}\r\n                        {type === \"Company matters\" ? <CompanyMAtters type={type} handleSubmit={handleSubmit} uploadedFile={uploadedFile} setUploadedFile={setUploadedFile}/> : null}\r\n                        {type === \"Set up a private limited company\" ? <NewCompanyEstablish scrollToTop={scrollToTop} type={type} handleSubmit={handleSubmit} uploadedFile={uploadedFile} setUploadedFile={setUploadedFile} /> : null}                     \r\n                      </div>\r\n                    </div>\r\n                        <button onClick={props.location ===\"/webchat\" ? ()=>{history.push(\"/\")} : ()=>{{props.toggleVisibility();setLoading(false);setUploadedFile([])}}} className=\"modal-close is-large\" aria-label=\"close\"></button>\r\n                  </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ContactUsForm","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\OtherQueries.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\FormField.js",["164"],"import React from \"react\";\r\nimport { ErrorMessage, Field, Form } from 'formik';\r\n\r\n\r\n\r\nexport const TextField = ({  field, label, placeholder}) => {\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <Field className=\"input\" placeholder={placeholder} {...field}/>\r\n            <div style={{ color:'red'}}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = ({field, label, placeholder}) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <Field style={{\"height\":\"200px\"}} className=\"textarea\" as=\"textarea\" placeholder={placeholder} {...field}/>\r\n            <div style={{ color:'red' }}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const FileUpload = (props) => {\r\n    return (\r\n        <div>\r\n            <label>{props.label}</label>\r\n            <input className=\"input\" onChange={(e)=>{\r\n                if(!props.values.file){\r\n                    props.setUploadedFile([...props.uploadedFile, e.target.files[0]])\r\n                    props.values.file = e.target.files[0].name\r\n                }else if(props.values.file){\r\n                    const files = props.uploadedFile.filter(file=>file.name !== props.values.file)\r\n                    props.setUploadedFile([...files, e.target.files[0]])\r\n                    props.values.file = e.target.files[0].name\r\n                }\r\n                }} name=\"file\" type=\"file\"></input>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const SelectField = ({validate, name, label, options}) =>{\r\n    return (\r\n        <div className=\"select\">\r\n            <Field as=\"select\" name={name} style={{\"width\":\"260px\"}} validate={validate}>\r\n                {options.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                    </option>\r\n                ))}\r\n            </Field>\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport const NumberField = ({ field, label, min, max, placeholder }) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <Field className=\"input\" {...field} placeholder={placeholder} type='number' min={min} max={max} />\r\n            <div style={{ color:'red' }}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// paziureti kad butu texfield didesnis per kompa o per tel mazesnis \r\n//footeri padaryt ideti piktogramas ","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\SelfEmployed.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\CompanyMatters.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\NewCompanyEstablish.js",["165"],"import React, {useState} from 'react'\r\nimport { Formik, Field, Form, FieldArray } from 'formik';\r\nimport {TextField, TextArea, FileUpload, SelectField, NumberField} from './FormField'\r\n\r\n\r\n\r\n\r\nconst NewCompanyEstablish = (props) => {\r\n    const [page, setPage] = useState(0)\r\n    const [shares, setShares] = useState(0)\r\n\r\n    const validateEmail = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage=\"Field is required\"\r\n        }else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n          errorMessage = 'Invalid email address';\r\n        }\r\n        return errorMessage;\r\n      };\r\n\r\n    const validateField = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }\r\n        return errorMessage\r\n    }\r\n    \r\n    const validateNumberField = (value) => {\r\n        let errorMessage\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }else if (isNaN(value)){\r\n            errorMessage = \"Invalid value\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    const validatePhoneNumber = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }else if (isNaN(value)){\r\n            errorMessage = \"Invalid phone number\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    const validateNumberOfShareHolders = (value) => {\r\n        let errorMessage;\r\n        if(value < 1 || value === 0 || !value){\r\n            errorMessage = \"Field is required or value is invalid\"\r\n        }else if (isNaN(value)){\r\n            errorMessage = \"Must be a number\"\r\n        }else if(value > 3){\r\n            errorMessage = \"If more than 3 contacts us directly\"\r\n        }\r\n        return errorMessage\r\n\r\n    }\r\n\r\n    const validateSelectField = (value) =>{\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }\r\n        if(value === \"Type of the company\"){\r\n            errorMessage = \"Please select type of the company\"\r\n        }\r\n        if(value === \"Position of shareholder\"){\r\n            errorMessage = \"Please select position of the shareholder\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    const validateSharesPerShareholder = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage= \"Field is required\"\r\n        }\r\n        if(isNaN(value)){\r\n            errorMessage = \"value must be a number\"\r\n        }\r\n        setShares(shares - value)\r\n        return errorMessage\r\n    }\r\n\r\n    const validateDOB = (value) => {\r\n        let errorMessage;\r\n        const datePatern = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]|(?:Jan|Mar|May|Jul|Aug|Oct|Dec)))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2]|(?:Jan|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)(?:0?2|(?:Feb))\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9]|(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep))|(?:1[0-2]|(?:Oct|Nov|Dec)))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }\r\n        if(!datePatern.test(value)){\r\n            errorMessage = \"Invalid value of date of birth\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    \r\n    const typeOfCompanyOptions = [\r\n        { value: null, label: \"Type of the company\"},\r\n        { value: \"LTD\" , label: \"LTD\" },\r\n        { value: \"LIMITED\" , label: \"LIMITED\" }\r\n    ]\r\n\r\n    const positionOfShareholderOptions = [\r\n        { value: null, label: \"Position of shareholder\"},\r\n        { value: \"Director\" , label: \"Director\" },\r\n        { value: \"Secretary \" , label: \"Secretary \"},\r\n        { value: \"Only shareholder\" , label: \"Only shareholder\" }\r\n    ]\r\n\r\n    const createShareholders = (values) => {\r\n        if(values.numberOfShareHolders > 3 || values.numberOfShareHolders < 1){\r\n            validateNumberOfShareHolders(values.numberOfShareHolders)\r\n        }\r\n        values.shareHolders.splice(0, values.shareHolders.length)\r\n        for(let i=1;i<=values.numberOfShareHolders;i++){\r\n            values.shareHolders.push({shareholder:i,position:\"\",numberOfShares:\"\",name:\"\",surname:\"\",dateOfBirth:\"\",NINnumber:\"\",UTRnumber:\"\",nationality:\"\",email:\"\",phonenumber:\"\",address:\"\",postcode:\"\",homeTown:\"\",mothersMaidenName:\"\",fathersName:\"\", file:\"\" })\r\n        }\r\n        setPage(page+1)\r\n        setShares(values.numberOfShares)\r\n        props.scrollToTop()\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setPage(page+1)\r\n        props.scrollToTop()\r\n    }\r\n\r\n    const previousPage = () => {\r\n        setPage(page-1)\r\n        props.scrollToTop()\r\n    }\r\n\r\n    \r\n\r\nreturn(\r\n        <div>\r\n            <Formik \r\n                    initialValues={{\r\n                                    type: props.type,\r\n                                    name:\"\",\r\n                                    preferredCompanyName:\"\",\r\n                                    alternativeCompanyName:\"\",\r\n                                    typeOfCompany:\"\",\r\n                                    natureOfBusiness:\"\",\r\n                                    email:\"\",\r\n                                    telephone:\"\",\r\n                                    companyAdress:\"\",\r\n                                    companyPostcode:\"\",\r\n                                    numberOfShares:\"\",\r\n                                    valueOfAllShares:\"\",\r\n                                    numberOfShareHolders:\"\",\r\n                                    shareHolders:[],\r\n                                    confirmed: false,\r\n                                    message:\"\",\r\n                                    date:\"\"\r\n\r\n                                }}\r\n                    onSubmit={props.handleSubmit}\r\n                            >\r\n                            {({ isValid, dirty, setFieldValue, setFieldTouched, values, errors, touched})=>{\r\n                                const firstPartValidation = values.numberOfShareHolders > 3 || values.numberOfShareHolders < 1 || errors.alternativeCompanyName || errors.companyAdress || errors.companyPostcode || errors.email || errors.natureOfBusiness || errors.numberOfShareHolders || errors.numberOfShares || errors.preferredCompanyName || errors.telephone || errors.typeOfCompany || errors.valueOfAllShares || errors.name\r\n                                return(\r\n                                    <Form style={{\"paddingTop\":\"10px\" , \"width\":\"260px\"}}>\r\n                                        { page === 0  ? [\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Full name:\" placeholder=\"John Smith\" name=\"name\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Company name:\" placeholder=\"Preferred company name\" name=\"preferredCompanyName\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Alternative company name:\" placeholder=\"Alternative company name\" name=\"alternativeCompanyName\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <SelectField label=\"Entry type\" name=\"typeOfCompany\" options={typeOfCompanyOptions} validate={validateSelectField}/>\r\n                                                <div style={{color:'red'}}>\r\n                                                    {errors.typeOfCompany ? <p>Please select a type of a company</p> : null}\r\n                                                </div>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Nature of business:\" placeholder=\"Purpose of the business\" name=\"natureOfBusiness\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Email:\" placeholder=\"example@domain.com\" name=\"email\" validate={validateEmail} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Telephone:\" placeholder=\"+44...\" name=\"telephone\" validate={validatePhoneNumber} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Company Address:\" placeholder=\"Street name and house number\" name=\"companyAdress\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Postcode:\" placeholder=\"Company postcode\" name=\"companyPostcode\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Number of shares:\" placeholder=\"E.g. 100\" name=\"numberOfShares\" validate={validateNumberField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Value of shares:\" placeholder=\"E.g. 1000£\" name=\"valueOfAllShares\" validate={validateNumberField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field label=\"Number of Share Holders:\" placeholder=\"Max 3\" name=\"numberOfShareHolders\" component={NumberField} min={1} max={3} validate={validateNumberOfShareHolders}/>\r\n                                            </div>,\r\n                                            <div className=\"buttons\">\r\n                                                <button className=\"button is-success\" disabled={values.numberOfShareHolders > 3 || values.numberOfShareHolders < 1 || firstPartValidation}  type=\"button\" onClick={()=>{createShareholders(values)}}>Next</button>\r\n                                                <div>\r\n                                                   {firstPartValidation ? <p style={{\"color\": \"red\"}}>Please check the fields!</p> : null} \r\n                                                </div>\r\n                                            </div>\r\n                                            ] \r\n                                        : null }\r\n                                        {page > 0 ? \r\n                                        <div>\r\n                                            {values.shareHolders.map((shareholder, index)=>{\r\n                                                const shareholderInfoValidation = !errors.shareHolders ? false : !errors.shareHolders[index] ? false  : errors.shareHolders[index].position || errors.shareHolders[index].numberOfShares || errors.shareHolders[index].name || errors.shareHolders[index].surname || errors.shareHolders[index].dateOfBirth || errors.shareHolders[index].nationality || errors.shareHolders[index].email || errors.shareHolders[index].phonenumber || errors.shareHolders[index].address || errors.shareHolders[index].postcode || errors.shareHolders[index].homeTown || errors.shareHolders[index].mothersMaidenName || errors.shareHolders[index].fathersName ?  true :  false\r\n                                                return(\r\n                                                <div>\r\n                                                    { page === shareholder.shareholder ? \r\n                                                    [<h3 className=\"subtitle is-4\">Shareholder {shareholder.shareholder} of {values.shareHolders.length}</h3>,\r\n                                                    <div className=\"field\"> \r\n                                                        <SelectField label=\"Position\" name={`shareHolders[${index}].position`} options={positionOfShareholderOptions} validate={validateSelectField} />\r\n                                                        <div style={{color:'red'}}>\r\n                                                            {!errors.shareHolders ? null : !errors.shareHolders[index] ? null : errors.shareHolders[index].position ? <p>{errors.shareHolders[index].position}</p> : null }\r\n                                                        </div>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Number of shares holding:\" placeholder=\"E.g. 100\" name={`shareHolders[${index}].numberOfShares`} validate={validateSharesPerShareholder} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Name:\" placeholder=\"John\" name={`shareHolders[${index}].name`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Surname:\" placeholder=\"Smith\" name={`shareHolders[${index}].surname`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Date of Birth:\" placeholder=\"DD/MM/YYYY\" name={`shareHolders[${index}].dateOfBirth`} validate={validateDOB} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Email:\" placeholder=\"example@domain.com\" name={`shareHolders[${index}].email`} validate={validateEmail} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Telephone:\" placeholder=\"+44...\" name={`shareHolders[${index}].phonenumber`} validate={validatePhoneNumber} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Address:\" placeholder=\"Street name and house number\" name={`shareHolders[${index}].address`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Postcode:\" placeholder=\"Postcode\" name={`shareHolders[${index}].postcode`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"National insurance number:\" placeholder=\"your national insurance number\" name={`shareHolders[${index}].NINnumber`} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"UTR number:\" placeholder=\"your UTR number\" name={`shareHolders[${index}].UTRnumber`} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Nationality:\" placeholder=\"E.g. British\" name={`shareHolders[${index}].nationality`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Home town:\" placeholder=\"Name of the city you were born\" name={`shareHolders[${index}].homeTown`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Mothers maiden name\" placeholder=\"E.g. Maria\" name={`shareHolders[${index}].mothersMaidenName`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field label=\"Fathers name:\" placeholder=\"E.g. Steve\" name={`shareHolders[${index}].fathersName`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <label>Copy of ID: </label>\r\n                                                        <FileUpload values={values.shareHolders[index]} uploadedFile={props.uploadedFile} setUploadedFile={props.setUploadedFile}/>\r\n                                                    </div>,\r\n                                                    <div className=\"buttons\">\r\n                                                        <button type=\"button\" className=\"button is-success\" disabled={!shareholder.position || shareholderInfoValidation} onClick={nextPage}>Next</button>\r\n                                                        <button type=\"button\" className=\"button is-danger is-inverted\" onClick={previousPage}>Back</button>\r\n                                                        <div>\r\n                                                            {shareholderInfoValidation ? <p style={{\"color\": \"red\"}}>Please check the fields!</p> : null} \r\n                                                        </div>\r\n                                                    </div>]\r\n                                                    : null }\r\n                                                </div>\r\n                                                )})}\r\n                                            </div>  : null}\r\n                                        {page === values.shareHolders.length + 1 ?\r\n                                                                                [\r\n                                                                                <div >\r\n                                                                                    <Field label=\"Additional information:\" placeholder=\"....\" name=\"message\" component={TextArea}/>\r\n                                                                                </div>,\r\n                                                                                <label className=\"checkbox\" style={{\"color\":`${values.confirmed === false ? \"red\" : \"white\"}`}}>\r\n                                                                                    <Field type=\"checkbox\" name=\"confirmed\" checked={values.confirmed}/> I confirm that all information provided is correct \r\n                                                                                </label>,\r\n                                                                                <div className=\"buttons\" >\r\n                                                                                    <button className=\"button is-success\" type=\"submit\" disabled={!dirty || !isValid || values.confirmed === false} onClick={()=>{values.date = new Date().toString()}}>Submit</button>\r\n                                                                                    <button  type=\"button\" className=\"button is-success is-inverted\" onClick={()=>{setPage(page-1)}}>Back</button>\r\n                                                                                </div>\r\n                                                                                \r\n                                                                                ] : null }\r\n                                    </Form>\r\n                                    )\r\n                                }\r\n                            }  \r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCompanyEstablish\r\n\r\n\r\n\r\n// padaryti po submit kad ismestu nauje modal su res.json","E:\\MyProjects\\mastis\\front\\src\\components\\MetaCreator.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\FloatingButtonContent.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":18,"column":10,"nodeType":"172","messageId":"173","endLine":18,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":55,"column":19,"nodeType":"176","endLine":55,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":57,"column":17,"nodeType":"176","endLine":57,"endColumn":215},{"ruleId":"177","severity":1,"message":"178","line":69,"column":25,"nodeType":"176","endLine":69,"endColumn":104},{"ruleId":"177","severity":1,"message":"178","line":35,"column":114,"nodeType":"176","endLine":35,"endColumn":199},{"ruleId":"170","severity":1,"message":"179","line":6,"column":12,"nodeType":"172","messageId":"173","endLine":6,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":6,"column":20,"nodeType":"172","messageId":"173","endLine":6,"endColumn":28},{"ruleId":"170","severity":1,"message":"171","line":18,"column":10,"nodeType":"172","messageId":"173","endLine":18,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":55,"column":19,"nodeType":"176","endLine":55,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":57,"column":17,"nodeType":"176","endLine":57,"endColumn":215},{"ruleId":"177","severity":1,"message":"178","line":69,"column":25,"nodeType":"176","endLine":69,"endColumn":104},{"ruleId":"177","severity":1,"message":"178","line":35,"column":114,"nodeType":"176","endLine":35,"endColumn":199},{"ruleId":"170","severity":1,"message":"179","line":6,"column":12,"nodeType":"172","messageId":"173","endLine":6,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":6,"column":20,"nodeType":"172","messageId":"173","endLine":6,"endColumn":28},{"ruleId":"166","replacedBy":"181"},{"ruleId":"168","replacedBy":"182"},{"ruleId":"170","severity":1,"message":"183","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":21},{"ruleId":"170","severity":1,"message":"184","line":21,"column":24,"nodeType":"172","messageId":"173","endLine":21,"endColumn":34},{"ruleId":"170","severity":1,"message":"171","line":29,"column":10,"nodeType":"172","messageId":"173","endLine":29,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":70,"column":17,"nodeType":"176","endLine":70,"endColumn":219},{"ruleId":"177","severity":1,"message":"178","line":82,"column":25,"nodeType":"176","endLine":82,"endColumn":104},{"ruleId":"174","severity":1,"message":"175","line":116,"column":17,"nodeType":"176","endLine":116,"endColumn":45},{"ruleId":"174","severity":1,"message":"175","line":117,"column":17,"nodeType":"176","endLine":117,"endColumn":49},{"ruleId":"174","severity":1,"message":"175","line":118,"column":17,"nodeType":"176","endLine":118,"endColumn":49},{"ruleId":"185","severity":1,"message":"186","line":121,"column":34,"nodeType":"187","endLine":121,"endColumn":49},{"ruleId":"177","severity":1,"message":"178","line":142,"column":17,"nodeType":"176","endLine":142,"endColumn":69},{"ruleId":"177","severity":1,"message":"178","line":36,"column":25,"nodeType":"176","endLine":36,"endColumn":83},{"ruleId":"170","severity":1,"message":"188","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":20},{"ruleId":"170","severity":1,"message":"189","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":22},{"ruleId":"170","severity":1,"message":"190","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":27},{"ruleId":"170","severity":1,"message":"191","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":112,"column":104,"nodeType":"194","messageId":"195","endLine":112,"endColumn":168},{"ruleId":"170","severity":1,"message":"196","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":35},{"ruleId":"170","severity":1,"message":"197","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":41},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'notification' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.",["198"],["199"],"'ContactUsForm' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'SelfEmployed' is defined but never used.","'CompanyMAtters' is defined but never used.","'NewCompanyEstablish' is defined but never used.","'useRef' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Form' is defined but never used.","'FieldArray' is defined but never used.","no-global-assign","no-unsafe-negation"]