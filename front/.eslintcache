[{"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\index.js":"1","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\reportWebVitals.js":"2","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\App.js":"3","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\home.js":"4","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Service.js":"5","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Contact.js":"6","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Home.js":"7","C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\MultiStepForm.js":"8","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\index.js":"9","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\App.js":"10","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\reportWebVitals.js":"11","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Service.js":"12","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Home.js":"13","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Contact.js":"14","C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\MultiStepForm.js":"15","E:\\MyProjects\\mastis\\front\\src\\index.js":"16","E:\\MyProjects\\mastis\\front\\src\\reportWebVitals.js":"17","E:\\MyProjects\\mastis\\front\\src\\App.js":"18","E:\\MyProjects\\mastis\\front\\src\\components\\Contact.js":"19","E:\\MyProjects\\mastis\\front\\src\\components\\Service.js":"20","E:\\MyProjects\\mastis\\front\\src\\components\\Home.js":"21","E:\\MyProjects\\mastis\\front\\src\\components\\MultiStepForm.js":"22","E:\\MyProjects\\mastis\\front\\src\\components\\ContactUsForm.js":"23","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\OtherQueries.js":"24","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\FormField.js":"25","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\SelfEmployed.js":"26","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\CompanyMatters.js":"27","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\NewCompanyEstablish.js":"28"},{"size":288,"mtime":1607456226453,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":4971,"mtime":1608059037651,"results":"32","hashOfConfig":"30"},{"size":1546,"mtime":1607970244802,"results":"33","hashOfConfig":"30"},{"size":1979,"mtime":1608054158615,"results":"34","hashOfConfig":"30"},{"size":3441,"mtime":1608053246515,"results":"35","hashOfConfig":"30"},{"size":980,"mtime":1608054268378,"results":"36","hashOfConfig":"30"},{"size":3055,"mtime":1608059066004,"results":"37","hashOfConfig":"30"},{"size":288,"mtime":1607456226453,"results":"38","hashOfConfig":"39"},{"size":4971,"mtime":1608059037651,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":1979,"mtime":1608054158615,"results":"42","hashOfConfig":"39"},{"size":980,"mtime":1608054268378,"results":"43","hashOfConfig":"39"},{"size":3441,"mtime":1608053246515,"results":"44","hashOfConfig":"39"},{"size":3055,"mtime":1608059066004,"results":"45","hashOfConfig":"39"},{"size":288,"mtime":1607456226453,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":5422,"mtime":1611687343443,"results":"49","hashOfConfig":"47"},{"size":7814,"mtime":1610399910926,"results":"50","hashOfConfig":"47"},{"size":1085,"mtime":1611687251106,"results":"51","hashOfConfig":"47"},{"size":1463,"mtime":1610046288264,"results":"52","hashOfConfig":"47"},{"size":4253,"mtime":1610996444797,"results":"53","hashOfConfig":"47"},{"size":5812,"mtime":1611687288079,"results":"54","hashOfConfig":"47"},{"size":3536,"mtime":1611164528491,"results":"55","hashOfConfig":"47"},{"size":2246,"mtime":1611165409627,"results":"56","hashOfConfig":"47"},{"size":5576,"mtime":1611164475997,"results":"57","hashOfConfig":"47"},{"size":4469,"mtime":1611164190049,"results":"58","hashOfConfig":"47"},{"size":20705,"mtime":1611497508479,"results":"59","hashOfConfig":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"3ppazc",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lw1y8p",{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"e6m8gh",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"93"},"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\index.js",[],["121","122"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\reportWebVitals.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\App.js",["123","124","125","126"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\home.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Service.js",["127"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Contact.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\Home.js",["128","129"],"C:\\Users\\rytis\\Desktop\\mastis\\front\\src\\components\\MultiStepForm.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\index.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\App.js",["130","131","132","133"],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\reportWebVitals.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Service.js",["134"],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Home.js",["135","136"],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\Contact.js",[],"C:\\Users\\rytis\\Desktop\\mastis\\FRONT\\src\\components\\MultiStepForm.js",[],"E:\\MyProjects\\mastis\\front\\src\\index.js",[],["137","138"],"E:\\MyProjects\\mastis\\front\\src\\reportWebVitals.js",[],"E:\\MyProjects\\mastis\\front\\src\\App.js",["139","140","141","142"],"E:\\MyProjects\\mastis\\front\\src\\components\\Contact.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Service.js",["143","144"],"E:\\MyProjects\\mastis\\front\\src\\components\\Home.js",["145"],"import React, { useState } from 'react'\r\n\r\n\r\nconst Home = ({Link}) => {\r\n\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div className=\"container py-3\">\r\n                            <h2 className=\"title\">Welcome to Mastis Accounting</h2>\r\n                        </div>\r\n                        <div className=\"container py-1\">\r\n                            <h2 className=\"subtitle\">We are accountancy firm based in South London, Mitcham. We offer wide range of specialist financial services for businesses and individuals. </h2>\r\n                        </div>\r\n                        <div className=\"container py-1\">\r\n                            <h2 className=\"subtitle\">By hard work we will try to deliver essential advice for your business in order to improve your business and personal wealth.</h2>\r\n                        </div>\r\n                        <div className=\"container py-1\">\r\n                            <h2 className=\"subtitle\">For assistance with any of your accountancy, taxation and business support requirements please <strong><Link role=\"button\" dissabled to=\"/contact\">contact us</Link></strong></h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n          )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n//kazka daryti su db nes matosi jinai realiu laiku ","E:\\MyProjects\\mastis\\front\\src\\components\\MultiStepForm.js",["146","147","148"],"E:\\MyProjects\\mastis\\front\\src\\components\\ContactUsForm.js",["149","150"],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\OtherQueries.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\FormField.js",["151"],"import React from \"react\";\r\nimport { ErrorMessage, Field, Form } from 'formik';\r\n\r\n\r\n\r\nexport const TextField = ({  field, label, placeholder}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Field className=\"input\" placeholder={placeholder} {...field}/>\r\n            <div style={{ color:'red'}}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = ({field, label, placeholder}) => {\r\n    return (\r\n        <div>\r\n            <Field className=\"textarea\" as=\"textarea\" placeholder={placeholder} {...field}/>\r\n            <div style={{ color:'red' }}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const FileUpload = (props) => {\r\n    return (\r\n        <div>\r\n            <input className=\"input\" onChange={(e)=>{\r\n                if(!props.values.file){\r\n                    props.setUploadedFile([...props.uploadedFile, e.target.files[0]])\r\n                    props.values.file = e.target.files[0].name\r\n                }else if(props.values.file){\r\n                    const files = props.uploadedFile.filter(file=>file.name !== props.values.file)\r\n                    props.setUploadedFile([...files, e.target.files[0]])\r\n                    props.values.file = e.target.files[0].name\r\n                }\r\n                }} name=\"file\" type=\"file\"></input>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const SelectField = ({validate, name, label, options}) =>{\r\n    return (\r\n        <div className=\"select\">\r\n            <Field as=\"select\" name={name} style={{\"width\":\"260px\"}} validate={validate}>\r\n                {options.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                    </option>\r\n                ))}\r\n            </Field>\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport const NumberField = ({ field, label, min, max, placeholder }) => {\r\n    return (\r\n        <div>\r\n            <Field className=\"input\" {...field} placeholder={placeholder} type='number' min={min} max={max} />\r\n            <div style={{ color:'red' }}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\SelfEmployed.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\CompanyMatters.js",[],"E:\\MyProjects\\mastis\\front\\src\\components\\Forms\\NewCompanyEstablish.js",["152"],"import React, {useState} from 'react'\r\nimport { Formik, Field, Form, FieldArray } from 'formik';\r\nimport {TextField, TextArea, FileUpload, SelectField, NumberField} from './FormField'\r\n\r\n\r\n\r\n\r\nconst NewCompanyEstablish = (props) => {\r\n    const [page, setPage] = useState(0)\r\n    const [shares, setShares] = useState(0)\r\n\r\n    const validateEmail = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage=\"Field is required\"\r\n        }else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n          errorMessage = 'Invalid email address';\r\n        }\r\n        return errorMessage;\r\n      };\r\n\r\n    const validateField = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }\r\n        return errorMessage\r\n    }\r\n    \r\n    const validateNumberField = (value) => {\r\n        let errorMessage\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }else if (isNaN(value)){\r\n            errorMessage = \"Invalid value\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    const validatePhoneNumber = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }else if (isNaN(value)){\r\n            errorMessage = \"Invalid phone number\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    const validateNumberOfShareHolders = (value) => {\r\n        let errorMessage;\r\n        if(value < 1 || value === 0 || !value){\r\n            errorMessage = \"Field is required or value is invalid\"\r\n        }else if (isNaN(value)){\r\n            errorMessage = \"Must be a number\"\r\n        }else if(value > 3){\r\n            errorMessage = \"If more than 3 contacts us directly\"\r\n        }\r\n        return errorMessage\r\n\r\n    }\r\n\r\n    const validateSelectField = (value) =>{\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }\r\n        if(value === \"Type of the company\"){\r\n            errorMessage = \"Please select type of the company\"\r\n        }\r\n        if(value === \"Position of shareholder\"){\r\n            errorMessage = \"Please select position of the shareholder\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    const validateSharesPerShareholder = (value) => {\r\n        let errorMessage;\r\n        if(!value){\r\n            errorMessage= \"Field is required\"\r\n        }\r\n        if(isNaN(value)){\r\n            errorMessage = \"value must be a number\"\r\n        }\r\n        setShares(shares - value)\r\n        return errorMessage\r\n    }\r\n\r\n    const validateDOB = (value) => {\r\n        let errorMessage;\r\n        const datePatern = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]|(?:Jan|Mar|May|Jul|Aug|Oct|Dec)))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2]|(?:Jan|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)(?:0?2|(?:Feb))\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9]|(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep))|(?:1[0-2]|(?:Oct|Nov|Dec)))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/\r\n        if(!value){\r\n            errorMessage = \"Field is required\"\r\n        }\r\n        if(!datePatern.test(value)){\r\n            errorMessage = \"Invalid value of date of birth\"\r\n        }\r\n        return errorMessage\r\n    }\r\n\r\n    \r\n    const typeOfCompanyOptions = [\r\n        { value: null, label: \"Type of the company\"},\r\n        { value: \"LTD\" , label: \"LTD\" },\r\n        { value: \"LIMITED\" , label: \"LIMITED\" }\r\n    ]\r\n\r\n    const positionOfShareholderOptions = [\r\n        { value: null, label: \"Position of shareholder\"},\r\n        { value: \"Director\" , label: \"Director\" },\r\n        { value: \"Secretary \" , label: \"Secretary \"},\r\n        { value: \"Only shareholder\" , label: \"Only shareholder\" }\r\n    ]\r\n\r\n    const createShareholders = (values) => {\r\n        if(values.numberOfShareHolders > 3 || values.numberOfShareHolders < 1){\r\n            validateNumberOfShareHolders(values.numberOfShareHolders)\r\n        }\r\n        values.shareHolders.splice(0, values.shareHolders.length)\r\n        for(let i=1;i<=values.numberOfShareHolders;i++){\r\n            values.shareHolders.push({shareholder:i,position:\"\",numberOfShares:\"\",name:\"\",surname:\"\",dateOfBirth:\"\",NINnumber:\"\",UTRnumber:\"\",nationality:\"\",email:\"\",phonenumber:\"\",address:\"\",postcode:\"\",homeTown:\"\",mothersMaidenName:\"\",fathersName:\"\", file:\"\" })\r\n        }\r\n        setPage(page+1)\r\n        setShares(values.numberOfShares)\r\n        props.scrollToTop()\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setPage(page+1)\r\n        props.scrollToTop()\r\n    }\r\n\r\n    const previousPage = () => {\r\n        setPage(page-1)\r\n        props.scrollToTop()\r\n    }\r\n\r\n    \r\n\r\nreturn(\r\n        <div>\r\n            <Formik \r\n                    initialValues={{\r\n                                    type: props.type,\r\n                                    preferredCompanyName:\"\",\r\n                                    alternativeCompanyName:\"\",\r\n                                    typeOfCompany:\"\",\r\n                                    natureOfBusiness:\"\",\r\n                                    email:\"\",\r\n                                    telephone:\"\",\r\n                                    companyAdress:\"\",\r\n                                    companyPostcode:\"\",\r\n                                    numberOfShares:\"\",\r\n                                    valueOfAllShares:\"\",\r\n                                    numberOfShareHolders:\"\",\r\n                                    shareHolders:[],\r\n                                    confirmed: false,\r\n                                    message:\"\"\r\n\r\n                                }}\r\n                    onSubmit={props.handleSubmit}\r\n                            >\r\n                            {({ isValid, dirty, setFieldValue, setFieldTouched, values, errors, touched})=>{\r\n                                const firstPartValidation = values.numberOfShareHolders > 3 || values.numberOfShareHolders < 1 || errors.alternativeCompanyName || errors.companyAdress || errors.companyPostcode || errors.email || errors.natureOfBusiness || errors.numberOfShareHolders || errors.numberOfShares || errors.preferredCompanyName || errors.telephone || errors.typeOfCompany || errors.valueOfAllShares\r\n                                return(\r\n                                    <Form style={{\"paddingTop\":\"10px\" , \"width\":\"260px\"}}>\r\n                                        { page === 0  ? [<div className=\"field\">\r\n                                                <Field placeholder=\"Preferred company name\" name=\"preferredCompanyName\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Alternative company name\" name=\"alternativeCompanyName\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <SelectField label=\"Entry type\" name=\"typeOfCompany\" options={typeOfCompanyOptions} validate={validateSelectField}/>\r\n                                                <div style={{color:'red'}}>\r\n                                                    {errors.typeOfCompany ? <p>Please select a type of a company</p> : null}\r\n                                                </div>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Nature of business\" name=\"natureOfBusiness\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"E-mail\" name=\"email\" validate={validateEmail} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Telephone\" name=\"telephone\" validate={validatePhoneNumber} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Company address\" name=\"companyAdress\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Company postcode\" name=\"companyPostcode\" validate={validateField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Number of shares e.g. 100\" name=\"numberOfShares\" validate={validateNumberField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Value of shares\" name=\"valueOfAllShares\" validate={validateNumberField} component={TextField}/>\r\n                                            </div>,\r\n                                            <div className=\"field\">\r\n                                                <Field placeholder=\"Number of Share Holders\" name=\"numberOfShareHolders\" component={NumberField} min={1} max={3} validate={validateNumberOfShareHolders}/>\r\n                                            </div>,\r\n                                            <div className=\"buttons\">\r\n                                                <button className=\"button is-success\" disabled={values.numberOfShareHolders > 3 || values.numberOfShareHolders < 1 || firstPartValidation}  type=\"button\" onClick={()=>{createShareholders(values)}}>Next</button>\r\n                                                <div>\r\n                                                   {firstPartValidation ? <p style={{\"color\": \"red\"}}>Please check the fields!</p> : null} \r\n                                                </div>\r\n                                            </div>\r\n                                            ] \r\n                                        : null }\r\n                                        {page > 0 ? \r\n                                        <div>\r\n                                            {values.shareHolders.map((shareholder, index)=>{\r\n                                                const shareholderInfoValidation = !errors.shareHolders ? false : !errors.shareHolders[index] ? false  : errors.shareHolders[index].position || errors.shareHolders[index].numberOfShares || errors.shareHolders[index].name || errors.shareHolders[index].surname || errors.shareHolders[index].dateOfBirth || errors.shareHolders[index].nationality || errors.shareHolders[index].email || errors.shareHolders[index].phonenumber || errors.shareHolders[index].address || errors.shareHolders[index].postcode || errors.shareHolders[index].homeTown || errors.shareHolders[index].mothersMaidenName || errors.shareHolders[index].fathersName ?  true :  false\r\n                                                return(\r\n                                                <div>\r\n                                                    { page === shareholder.shareholder ? \r\n                                                    [<h3 className=\"subtitle is-4\">Shareholder {shareholder.shareholder} of {values.shareHolders.length}</h3>,\r\n                                                    <div className=\"field\"> \r\n                                                        <SelectField label=\"Position\" name={`shareHolders[${index}].position`} options={positionOfShareholderOptions} validate={validateSelectField} />\r\n                                                        <div style={{color:'red'}}>\r\n                                                            {!errors.shareHolders ? null : !errors.shareHolders[index] ? null : errors.shareHolders[index].position ? <p>{errors.shareHolders[index].position}</p> : null }\r\n                                                        </div>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Number of shares holding e.g. 100\" name={`shareHolders[${index}].numberOfShares`} validate={validateSharesPerShareholder} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Name\" name={`shareHolders[${index}].name`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Surname\" name={`shareHolders[${index}].surname`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Date of Birth DD/MM/YYYY\" name={`shareHolders[${index}].dateOfBirth`} validate={validateDOB} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"E-mail\" name={`shareHolders[${index}].email`} validate={validateEmail} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Phonenumber\" name={`shareHolders[${index}].phonenumber`} validate={validatePhoneNumber} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Address\" name={`shareHolders[${index}].address`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Postcode\" name={`shareHolders[${index}].postcode`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"National insurance number\" name={`shareHolders[${index}].NINnumber`} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"UTR number\" name={`shareHolders[${index}].UTRnumber`} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Nationality\" name={`shareHolders[${index}].nationality`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Home town\" name={`shareHolders[${index}].homeTown`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Mothers maiden name\" name={`shareHolders[${index}].mothersMaidenName`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <Field placeholder=\"Fathers name\" name={`shareHolders[${index}].fathersName`} validate={validateField} component={TextField}/>\r\n                                                    </div>,\r\n                                                    <div className=\"field\">\r\n                                                        <label>Copy of ID: </label>\r\n                                                        <FileUpload values={values.shareHolders[index]} uploadedFile={props.uploadedFile} setUploadedFile={props.setUploadedFile}/>\r\n                                                    </div>,\r\n                                                    <div className=\"buttons\">\r\n                                                        <button type=\"button\" className=\"button is-success\" disabled={!shareholder.position || shareholderInfoValidation} onClick={nextPage}>Next</button>\r\n                                                        <button type=\"button\" className=\"button is-danger is-inverted\" onClick={previousPage}>Back</button>\r\n                                                        <div>\r\n                                                            {shareholderInfoValidation ? <p style={{\"color\": \"red\"}}>Please check the fields!</p> : null} \r\n                                                        </div>\r\n                                                    </div>]\r\n                                                    : null }\r\n                                                </div>\r\n                                                )})}\r\n                                            </div>  : null}\r\n                                        {page === values.shareHolders.length + 1 ?\r\n                                                                                [\r\n                                                                                <div >\r\n                                                                                    <Field  placeholder=\"Aditional informnation\" name=\"message\" component={TextArea}/>\r\n                                                                                </div>,\r\n                                                                                <label className=\"checkbox\" style={{\"color\":`${values.confirmed === false ? \"red\" : \"white\"}`}}>\r\n                                                                                    <Field type=\"checkbox\" name=\"confirmed\" checked={values.confirmed}/> I confirm that all information provided is correct \r\n                                                                                </label>,\r\n                                                                                <div className=\"buttons\" >\r\n                                                                                    <button className=\"button is-success\" type=\"submit\" disabled={!dirty || !isValid || values.confirmed === false}>Submit</button>\r\n                                                                                    <button  type=\"button\" className=\"button is-success is-inverted\" onClick={()=>{setPage(page-1)}}>Back</button>\r\n                                                                                    <button type=\"button\" onClick={()=>{console.log(isValid)}}>valid</button>\r\n                                                                                </div>\r\n                                                                                \r\n                                                                                ] : null }\r\n                                    </Form>\r\n                                    )\r\n                                }\r\n                            }  \r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCompanyEstablish\r\n\r\n\r\n\r\n// padaryti po submit kad ismestu nauje modal su res.json",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":18,"column":10,"nodeType":"159","messageId":"160","endLine":18,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":55,"column":19,"nodeType":"163","endLine":55,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":57,"column":17,"nodeType":"163","endLine":57,"endColumn":215},{"ruleId":"164","severity":1,"message":"165","line":69,"column":25,"nodeType":"163","endLine":69,"endColumn":104},{"ruleId":"164","severity":1,"message":"165","line":35,"column":114,"nodeType":"163","endLine":35,"endColumn":199},{"ruleId":"157","severity":1,"message":"166","line":6,"column":12,"nodeType":"159","messageId":"160","endLine":6,"endColumn":17},{"ruleId":"157","severity":1,"message":"167","line":6,"column":20,"nodeType":"159","messageId":"160","endLine":6,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":18,"column":10,"nodeType":"159","messageId":"160","endLine":18,"endColumn":22},{"ruleId":"161","severity":1,"message":"162","line":55,"column":19,"nodeType":"163","endLine":55,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":57,"column":17,"nodeType":"163","endLine":57,"endColumn":215},{"ruleId":"164","severity":1,"message":"165","line":69,"column":25,"nodeType":"163","endLine":69,"endColumn":104},{"ruleId":"164","severity":1,"message":"165","line":35,"column":114,"nodeType":"163","endLine":35,"endColumn":199},{"ruleId":"157","severity":1,"message":"166","line":6,"column":12,"nodeType":"159","messageId":"160","endLine":6,"endColumn":17},{"ruleId":"157","severity":1,"message":"167","line":6,"column":20,"nodeType":"159","messageId":"160","endLine":6,"endColumn":28},{"ruleId":"153","replacedBy":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"157","severity":1,"message":"158","line":22,"column":10,"nodeType":"159","messageId":"160","endLine":22,"endColumn":22},{"ruleId":"157","severity":1,"message":"170","line":28,"column":7,"nodeType":"159","messageId":"160","endLine":28,"endColumn":14},{"ruleId":"164","severity":1,"message":"165","line":59,"column":17,"nodeType":"163","endLine":59,"endColumn":215},{"ruleId":"164","severity":1,"message":"165","line":71,"column":25,"nodeType":"163","endLine":71,"endColumn":104},{"ruleId":"157","severity":1,"message":"171","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":17,"column":310,"nodeType":"163","endLine":17,"endColumn":369},{"ruleId":"157","severity":1,"message":"171","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"172","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":20},{"ruleId":"157","severity":1,"message":"173","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":22},{"ruleId":"157","severity":1,"message":"174","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":27},{"ruleId":"157","severity":1,"message":"175","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":102,"column":47,"nodeType":"178","messageId":"179","endLine":102,"endColumn":111},{"ruleId":"157","severity":1,"message":"180","line":2,"column":31,"nodeType":"159","messageId":"160","endLine":2,"endColumn":35},{"ruleId":"157","severity":1,"message":"181","line":2,"column":31,"nodeType":"159","messageId":"160","endLine":2,"endColumn":41},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'notification' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.",["182"],["183"],"'history' is assigned a value but never used.","'useState' is defined but never used.","'SelfEmployed' is defined but never used.","'CompanyMAtters' is defined but never used.","'NewCompanyEstablish' is defined but never used.","'useRef' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Form' is defined but never used.","'FieldArray' is defined but never used.","no-global-assign","no-unsafe-negation"]